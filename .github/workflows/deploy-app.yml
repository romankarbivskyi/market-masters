name: Deploy App

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        run: git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git .

      - name: Set up Docker Buildx
        run: docker buildx create --use

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GH_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Build and push client image
        run: |
          docker buildx build \
            --push \
            --build-arg NEXT_PUBLIC_BASE_API_URL=https://www.mmasters.live/api \
            --build-arg NEXT_PUBLIC_WEB3FORMS_KEY=bd0b7922-14d4-4ce9-8e3f-4c9d0fc5f3c5 \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-client:latest \
            ./client

      - name: Build and push server image
        run: |
          docker buildx build \
            --push \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-server:latest \
            ./server

      - name: Connect to VPS and deploy using SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd /app
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-client:latest
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-server:latest
            docker-compose up -d --force-recreate
          EOF
